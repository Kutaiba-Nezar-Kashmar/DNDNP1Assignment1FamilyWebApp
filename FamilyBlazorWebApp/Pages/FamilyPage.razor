@page "/Family"
@using Models
@using Data
@inject IFamilyData FamilyData
@inject NavigationManager NavigationManager


@if (familiesToShow == null)
{
    <p>
        <em>Loading</em>
    </p>
}
else if (!familiesToShow.Any())
{
    <p>
        <em style="color: white">No Families to show. Please add som.</em>
    </p>
}
else
{
  
    <br/>
    <div class="TableBox">
        <table class="table">
            <thead>
            <tr>
                <AuthorizeView>
                    <Authorized>
                        <th>Family ID</th>
                    </Authorized>
                </AuthorizeView>
                <th>Street Name</th>
                <th>House Number</th>
                <AuthorizeView>
                    <Authorized>
                        <th>Edit</th>
                        <th>Remove</th>
                    </Authorized>
                </AuthorizeView>
                <th>View Family Members</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var family in familiesToShow)
            {
                <tr>
                    <AuthorizeView>
                        <Authorized>
                            <td>@family.Id</td>
                        </Authorized>
                    </AuthorizeView>
                    <td>@family.StreetName</td>
                    <td>@family.HouseNumber</td>
                    <AuthorizeView>
                        <Authorized>
                            <td>
                                <button @onclick="@(() => Edit(family.Id))">
                                    <i class="oi oi-pencil"/>
                                </button>
                            </td>
                            <td>
                                <button @onclick="@(() => RemoveFamily(family.Id))">
                                    <i class="oi oi-trash"/>
                                </button>
                            </td>
                        </Authorized>
                    </AuthorizeView>
                    <td>
                        <button @onclick="@(() => ViewFamilyMembers(family.Id))">
                            <i class="oi oi-arrow-thick-right"/>
                        </button>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
}

@code 
{
    private IList<Family> familiesToShow;
    private IList<Family> allFamilies;

    protected override async Task OnInitializedAsync()
    {
        allFamilies = FamilyData.GetFamilies();
        familiesToShow = allFamilies;
    }

    private void ViewFamilyMembers(int familyId)
    {
        NavigationManager.NavigateTo($"FamilyMembers/{familyId}");
    }
    
    private void Edit(int id)
    {
        NavigationManager.NavigateTo($"EditFamily/{id}");
    }

    private void Add()
    {
        NavigationManager.NavigateTo("AddFamily");
    }

    private void RemoveFamily(int familyId)
    {
        Family familyToRemove = allFamilies.First(f => f.Id == familyId);
        FamilyData.RemoveFamily(familyId);
        allFamilies.Remove(familyToRemove);
        familiesToShow.Remove(familyToRemove);
    }
}