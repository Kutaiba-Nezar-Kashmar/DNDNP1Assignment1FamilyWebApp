@page "/Adults"
@using Models
@using Data
@inject IAdultData AdultData
@inject NavigationManager NavigationManager

@if (adultsToShow == null)
{
    <p>
        <em>Loading</em>
    </p>
}
else if (!adultsToShow.Any())
{
    <p>
        <em>No people to show. Please add som.</em>
    </p>
        }
        else
        {
            <AuthorizeView>
                <NotAuthorized>
                    <h3>Please <a href="Login"> login</a> if you wish to change data</h3>
                </NotAuthorized>
            </AuthorizeView>
            <table class="table">
            <thead>
            <tr>
                <AuthorizeView>
                    <Authorized>
                        <th>Person ID</th>
                    </Authorized>
                </AuthorizeView>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Job Title</th>
                <th>Salary</th>
                <th>Hair Color</th>
                <th>Eye Color</th>
                <th>Age</th>
                <th>Weight</th>
                <th>Height</th>
                <th>Sex</th>
                <AuthorizeView>
                    <Authorized>
                        <th>Edit</th>
                        <th>Remove</th>
                    </Authorized>
                </AuthorizeView>
            </tr>
            </thead>
            <tbody>
            @foreach (var adult in adultsToShow)
            {
                <tr>
                    <AuthorizeView>
                        <Authorized>
                            <td>@adult.Id</td>
                        </Authorized>
                    </AuthorizeView>
                    <td>@adult.FirstName</td>
                    <td>@adult.LastName</td>
                    <td>@adult.JobTitle.JobTitle</td>
                    <td>@adult.JobTitle.Salary</td>
                    <td>@adult.HairColor</td>
                    <td>@adult.EyeColor</td>
                    <td>@adult.Age</td>
                    <td>@adult.Weight</td>
                    <td>@adult.Height</td>
                    <td>@adult.Sex</td>
                    <AuthorizeView>
                        <Authorized>
                            <td>
                                <button @onclick="@(() => Edit(adult.Id))">
                                    <i class="oi oi-pencil"/>
                                </button>
                            </td>
                            <td>
                                <button>
                                    <i class="oi oi-trash"/>
                                </button>
                            </td>
                        </Authorized>
                    </AuthorizeView>
                </tr>
            }
            </tbody>
        </table>
        }

@code 
{
    private IList<Adult> adultsToShow;
    private IList<Adult> allAdults;

    private string? filterByName;

    protected override async Task OnInitializedAsync()
    {
        allAdults = AdultData.GetAdults();
        adultsToShow = allAdults;
    }

    private void FilterByPersonName(ChangeEventArgs changeEventArgs)
    {
        
    }

    private void Edit(int id)
    {
        NavigationManager.NavigateTo($"Edit/{id}");
    }

    private void AddAdult()
    {
        NavigationManager.NavigateTo("/AddAdult");
    }
}