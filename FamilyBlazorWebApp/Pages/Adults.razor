@page "/Adults"
@using Models
@using Data
@inject IAdultData AdultData

<h3>Adult</h3>

@if (adultsToShow == null)
{
    <p>
        <em>Loading</em>
    </p>
}
else if (!adultsToShow.Any())
{
    <p>
        <em>No people to show. Please add som.</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Person ID</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Job Title</th>
            <th>Salary</th>
            <th>Hair Color</th>
            <th>Eye Color</th>
            <th>Age</th>
            <th>Weight</th>
            <th>Height</th>
            <th>Sex</th>
        </tr>
        </thead>
        <tbody>
            @foreach (var adult in adultsToShow)
            {
                <tr>
                    <td>@adult.Id</td>
                    <td>@adult.FirstName</td>
                    <td>@adult.LastName</td>
                    <td>@adult.JobTitle.JobTitle</td>
                    <td>@adult.JobTitle.Salary</td>
                    <td>@adult.HairColor</td>
                    <td>@adult.EyeColor</td>
                    <td>@adult.Age</td>
                    <td>@adult.Weight</td>
                    <td>@adult.Height</td>
                    <td>@adult.Sex</td>
                </tr>
            }
        </tbody>
    </table>
}

@code 
{
    private IList<Adult> adultsToShow;
    private IList<Adult> allAdults;

    private string? filterByName;

    protected override async Task OnInitializedAsync()
    {
        allAdults = AdultData.GetAdults();
        adultsToShow = allAdults;
    }

    private void FilterByPersonName(ChangeEventArgs changeEventArgs)
    {
        
    }
    
    
}