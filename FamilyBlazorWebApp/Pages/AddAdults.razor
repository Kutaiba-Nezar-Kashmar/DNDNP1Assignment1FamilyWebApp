@page "/AddAdults"
@using Models
@using Data
@inject IAdultData AdultData
@inject NavigationManager NavigationManager

<AuthorizeView>
    <NotAuthorized Context="Auth">
        <h3>Please <a href="Login"> login</a> in order to view this page</h3>
    </NotAuthorized>
    <Authorized Context="Auth">
        <EditForm Model="@newAdult" OnValidSubmit="@AddAdult">
            <DataAnnotationsValidator/>
            <ValidationSummary/>
            <div>
                <h4>Please fill the fields:</h4>

                <input type="text" placeholder="First Name" @bind-value="newAdult.FirstName"/>


                <input type="text" placeholder="Last Name" @bind-value="newAdult.LastName"/>


                <input type="text" placeholder="Color" @bind-value="newAdult.HairColor"/>


                <input type="text" placeholder="Eye Color" @bind-value="newAdult.EyeColor">


                <input type="number" placeholder="Age" @bind-value="newAdult.Age"/>


                <input type="number" placeholder="Weight" step="any" @bind-value="newAdult.Weight"/>


                <input type="number" placeholder="Height" step="any" @bind-value="newAdult.Height"/>


                <input type="text" placeholder="Sex" @bind-value="newAdult.Sex"/>

                <input type="text" placeholder="Job title" @bind-value="newAdult.JobTitle.JobTitle"/>


                <input type="number" placeholder="Salary" @bind-value="newAdult.JobTitle.Salary"/>

                <button class="btn btn-outline-dark" type="submit">Save Changes</button>
            </div>
        </EditForm>
    </Authorized>
</AuthorizeView>

@code 
{
    //JobTitle = new Job() to create new Job and solve the NullPointer 
    private Adult newAdult = new Adult(){JobTitle = new Job()};

     private void AddAdult()
    {
         AdultData.AddAdult(newAdult);
        NavigationManager.NavigateTo("/Adults");
    
    }
}